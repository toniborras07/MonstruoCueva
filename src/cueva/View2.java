/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cueva;

import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author toniborras
 */
public class View2 extends javax.swing.JFrame implements MouseListener {

    private int dimension;
    private Casilla[][] mapa;
    private boolean selTesoro;
    private boolean selMosnter;
    private boolean selFoso;
    private boolean selCamino;
    private ImageIcon tierra = new ImageIcon("src/img/monstruo.png");
    private ImageIcon charm = new ImageIcon("src/img/charmander.png");
    private ImageIcon verde = new ImageIcon("src/img/foso.png");
    private ImageIcon tesoroimg = new ImageIcon("src/img/tesoro.png");
    private ImageIcon camino = new ImageIcon("src/img/piedra.jpg");

    /**
     * Creates new form View
     */
    public View2(Main p, int dim) {
        this.selCamino = false;
        this.selFoso = false;
        this.selMosnter = false;
        this.selTesoro = false;
        this.prog = p;
        this.dimension = dim;
        mapa = new Casilla[dimension][dimension];
        initComponents();

    }

    public void mostrar() {
        this.pack();

        setLocationRelativeTo(null);
        setTitle("La Cueva del Monstruo");
        Icon icono = new ImageIcon(charm.getImage().getScaledInstance(this.monstruo.getWidth(), this.monstruo.getHeight(), Image.SCALE_DEFAULT));
        this.monstruo.setIcon(icono);
        Icon icono2 = new ImageIcon(camino.getImage().getScaledInstance(this.jLabel2.getWidth(), this.jLabel2.getHeight(), Image.SCALE_DEFAULT));
        this.jLabel2.setIcon(icono2);
        Icon icono3 = new ImageIcon(tesoroimg.getImage().getScaledInstance(this.tesoroo.getWidth(), this.tesoroo.getHeight(), Image.SCALE_DEFAULT));
        this.tesoroo.setIcon(icono3);
        Icon icono4 = new ImageIcon(verde.getImage().getScaledInstance(this.jLabel1.getWidth(), this.jLabel1.getHeight(), Image.SCALE_DEFAULT));
        this.jLabel1.setIcon(icono4);
        this.pintarMapa();
        this.setResizable(false);
        this.revalidate();
//        this.repaint();
        this.setVisible(true);
//        t.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        opciones = new javax.swing.JPanel();
        monstruo = new javax.swing.JLabel();
        tesoroo = new javax.swing.JLabel();
        fosoo = new javax.swing.JLabel();
        init = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        monster = new javax.swing.JButton();
        tesoro = new javax.swing.JButton();
        foso = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        principal = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        opciones.setBackground(new java.awt.Color(100, 100, 100));

        monstruo.setText("jLabel1");

        tesoroo.setText("jLabel2");

        fosoo.setText("jLabel3");

        init.setText("Iniciar");

        jLabel1.setText("jLabel1");

        monster.setText("Monstruos");
        monster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monsterActionPerformed(evt);
            }
        });

        tesoro.setText("Tesoros");
        tesoro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tesoroActionPerformed(evt);
            }
        });

        foso.setText("Fosos");
        foso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fosoActionPerformed(evt);
            }
        });

        jButton1.setText("Camino");

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout opcionesLayout = new javax.swing.GroupLayout(opciones);
        opciones.setLayout(opcionesLayout);
        opcionesLayout.setHorizontalGroup(
                opcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opcionesLayout.createSequentialGroup()
                                .addGroup(opcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(opcionesLayout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addGroup(opcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(tesoro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(foso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(opcionesLayout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, opcionesLayout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addGroup(opcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opcionesLayout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addGroup(opcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(tesoroo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(monster, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(monstruo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(opcionesLayout.createSequentialGroup()
                                                                .addComponent(init, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(0, 0, Short.MAX_VALUE))))
                                        .addGroup(opcionesLayout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(125, 125, 125)
                                .addComponent(fosoo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        opcionesLayout.setVerticalGroup(
                opcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(opcionesLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(init)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(monstruo, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monster, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tesoroo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(opcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opcionesLayout.createSequentialGroup()
                                                .addComponent(fosoo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(90, 90, 90))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, opcionesLayout.createSequentialGroup()
                                                .addComponent(tesoro)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(foso)
                                                .addGap(14, 14, 14))))
        );

        getContentPane().add(opciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 600));

        principal.setBackground(new java.awt.Color(253, 253, 150));
        principal.setPreferredSize(new java.awt.Dimension(600, 600));
        principal.setLayout(new java.awt.GridLayout(dimension, dimension));
        getContentPane().add(principal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 600, -1));
        principal.addMouseListener(this);
        opciones.addMouseListener(this);
        pack();
    }// </editor-fold>                        

    private void monsterActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void tesoroActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void fosoActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    public void pintarMapa() {
        for (int i = 0; i < dimension; i++) {
            for (int j = 0; j < dimension; j++) {
                mapa[i][j] = new Casilla(this.principal.getWidth() / dimension);
                principal.add(mapa[i][j]);
                mapa[i][j].ponerImagen();
            }

        }
    }
    /**
     * @param args the command line arguments
     */
    private Main prog;

    // Variables declaration - do not modify                     
    private javax.swing.JButton foso;
    private javax.swing.JLabel fosoo;
    private javax.swing.JButton init;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton monster;
    private javax.swing.JLabel monstruo;
    private javax.swing.JPanel opciones;
    private javax.swing.JPanel principal;
    private javax.swing.JButton tesoro;
    private javax.swing.JLabel tesoroo;
    // End of variables declaration                   

    @Override
    public void mouseClicked(MouseEvent arg0) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mousePressed(MouseEvent arg0) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseReleased(MouseEvent arg0) {
        
        int x = 0, y = 0, xCasilla, yCasilla;
        //Algoritmo encargado de destapar una casilla si se encontraba previa- 
        //mente tapada. Se obtienen las coordenadas de la casilla clickada con 
        //el boton izquierdo del raton
        if (arg0.getButton() == MouseEvent.BUTTON1) {
            x = arg0.getX();
            y = arg0.getY();

            xCasilla = x / (this.principal.getWidth() / dimension);
            yCasilla = y / (this.principal.getWidth() / dimension);
            
            switch(getOpcion()){
                case 0:
                    mapa[xCasilla][yCasilla].setIcon(camino);
                    break;
                case 1:
                    
                    break;
                case 2:
                    
                    break;
                case 3:
                    
                    break;
                
            }

//            System.out.println("Posicion de la casilla: x = " + xCasilla + ", y = " + yCasilla);

        }
    }

    @Override
    public void mouseEntered(MouseEvent arg0) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void mouseExited(MouseEvent arg0) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public int getOpcion(){
        if (this.selCamino) {
            return 0;
        }else if(this.selFoso){
            return 1;
        }else if(this.selMosnter){
            return 2;
        }else if(this.selTesoro){
            return 3;
        }
        return 4;
    }
}
